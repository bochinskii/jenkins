<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1186.v8def1a_5f3944">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2086.v12b_420f036e5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options>
        <string>skipStagesAfterUnstable</string>
      </options>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>4</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2725.v7b_c717eb_12ce">
    <script>pipeline {
    agent {
        label &apos;agent001 || agent002&apos;
    }
    options {
        skipStagesAfterUnstable()
    }
    environment {
        OWNER = &quot;Denis Bochinskii&quot;
    }
    stages {
        stage(&apos;Build&apos;) {
            steps {
                echo &quot;Build Application&quot;
                echo &quot;Hello - ${OWNER} on build staging&quot;
                // sh &quot;sleep 10s&quot;
                sleep(time:10,unit:&quot;SECONDS&quot;)
                sh &apos;&apos;&apos;
                  id -un
                  uname -r
                  date +%Y-%m-%d
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Test&apos;){
            steps {
                echo &quot;Test Application&quot;
                echo &quot;Hello - ${OWNER} on test staging&quot;
                sleep(time:10,unit:&quot;SECONDS&quot;)
            }
        }
        stage(&apos;Deploy&apos;) {
            steps {
                echo &quot;Deploy Application&quot;
                echo &quot;Hello - ${OWNER} on deploy staging&quot;
                sleep(time:10,unit:&quot;SECONDS&quot;)
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>